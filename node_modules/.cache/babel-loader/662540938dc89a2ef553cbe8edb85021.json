{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // custom hook for performing GET request\n\nexport const useFetch = (searchMethod, searchValue) => {\n  let param = 0;\n  if (searchValue !== undefined) param = searchValue;\n  const getAll = 'http://localhost:5000/api/students';\n  const getById = 'http://localhost:5000/api/student/' + param;\n  let url = null;\n\n  switch (searchMethod) {\n    case 'getById':\n      url = getById;\n      break;\n\n    case 'getAll':\n      url = getAll;\n      break;\n\n    default:\n      url = null;\n  }\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async function () {\n      try {\n        setLoading(true);\n        const response = await axios.get(url);\n\n        if (response.status === 200) {\n          setData(response.data);\n          console.log('Date fetched! -> ' + response.data);\n        }\n      } catch (error) {\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    loading,\n    data\n  };\n};\nexport function createStudent(student) {\n  return axios.post('http://localhost:5000/api/add/student', student);\n}\nexport function updateStudent(student) {\n  console.log('in the upate service');\n  return axios.put('http://localhost:5000/api/update/student', student);\n}\nexport function deleteStudent(studentId) {\n  return axios.delete('http://localhost:5000/api/delete/student/' + studentId);\n}","map":{"version":3,"sources":["C:/React Workspace/students/src/service/StudentService.jsx"],"names":["React","useState","useEffect","axios","useFetch","searchMethod","searchValue","param","undefined","getAll","getById","url","data","setData","loading","setLoading","fetchData","response","get","status","console","log","error","createStudent","student","post","updateStudent","put","deleteStudent","studentId","delete"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,YAAD,EAAeC,WAAf,KAA+B;AACrD,MAAIC,KAAK,GAAG,CAAZ;AAEA,MAAID,WAAW,KAAKE,SAApB,EAA+BD,KAAK,GAAGD,WAAR;AAE/B,QAAMG,MAAM,GAAG,oCAAf;AACA,QAAMC,OAAO,GAAG,uCAAuCH,KAAvD;AACA,MAAII,GAAG,GAAG,IAAV;;AAEA,UAAQN,YAAR;AACE,SAAK,SAAL;AAAgBM,MAAAA,GAAG,GAAGD,OAAN;AACd;;AACF,SAAK,QAAL;AAAeC,MAAAA,GAAG,GAAGF,MAAN;AACb;;AACF;AAASE,MAAAA,GAAG,GAAG,IAAN;AALX;;AAQA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,SAAS,GAAG,kBAAkB;AAClC,UAAI;AACFD,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAME,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUP,GAAV,CAAvB;;AACA,YAAIM,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3BN,UAAAA,OAAO,CAACI,QAAQ,CAACL,IAAV,CAAP;AACAQ,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBJ,QAAQ,CAACL,IAA3C;AACD;AACF,OAPD,CAOE,OAAOU,KAAP,EAAc;AACd,cAAMA,KAAN;AACD,OATD,SASU;AACRP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAbD;;AAcAC,IAAAA,SAAS;AACV,GAhBQ,EAgBN,CAACL,GAAD,CAhBM,CAAT;AAiBA,SAAO;AAAEG,IAAAA,OAAF;AAAWF,IAAAA;AAAX,GAAP;AACD,CArCM;AAuCP,OAAO,SAASW,aAAT,CAAuBC,OAAvB,EAAgC;AACrC,SAAOrB,KAAK,CAACsB,IAAN,CAAW,uCAAX,EAAoDD,OAApD,CAAP;AACD;AAED,OAAO,SAASE,aAAT,CAAuBF,OAAvB,EAAgC;AACrCJ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,SAAOlB,KAAK,CAACwB,GAAN,CAAU,0CAAV,EAAsDH,OAAtD,CAAP;AACD;AAED,OAAO,SAASI,aAAT,CAAuBC,SAAvB,EAAkC;AACvC,SAAO1B,KAAK,CAAC2B,MAAN,CAAa,8CAA8CD,SAA3D,CAAP;AACD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// custom hook for performing GET request\r\nexport const useFetch = (searchMethod, searchValue) => {\r\n  let param = 0;\r\n\r\n  if (searchValue !== undefined) param = searchValue;\r\n\r\n  const getAll = 'http://localhost:5000/api/students';\r\n  const getById = 'http://localhost:5000/api/student/' + param;\r\n  let url = null;\r\n\r\n  switch (searchMethod) {\r\n    case 'getById': url = getById;\r\n      break;\r\n    case 'getAll': url = getAll;\r\n      break;\r\n    default: url = null;\r\n  }\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetchData = async function () {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get(url);\r\n        if (response.status === 200) {\r\n          setData(response.data);\r\n          console.log('Date fetched! -> ' + response.data);\r\n        }\r\n      } catch (error) {\r\n        throw error;\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n  return { loading, data };\r\n};\r\n\r\nexport function createStudent(student) {\r\n  return axios.post('http://localhost:5000/api/add/student', student);\r\n}\r\n\r\nexport function updateStudent(student) {\r\n  console.log('in the upate service');\r\n  return axios.put('http://localhost:5000/api/update/student', student);\r\n}\r\n\r\nexport function deleteStudent(studentId) {\r\n  return axios.delete('http://localhost:5000/api/delete/student/' + studentId);\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}